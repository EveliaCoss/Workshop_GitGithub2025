[
  {
    "objectID": "index.html",
    "href": "index.html",
    "title": "Workshop sobre Git / Github 2024",
    "section": "",
    "text": "Informaci√≥n general\n\n\nSobre el curso üìåRequisitos previosAgenda üìÜ\n\n\nEste documento se basa en ‚ÄúHappy Git with R‚Äù de Jenny Bryan, los STAT 545 TAs, Jim Hester, as√≠ como lasgu√≠as practicas de Github.\n\nFechas: 16 y 18 octubre 2024\nDuraci√≥n del curso: 3 horas y 30 minutos\n\nInstructora:\n\nEvelia Lorena Coss-Navarrete - PostDoc, LIIGH-UNAM.\n\nResumen:\nEste tutorial te ense√±ar√° los conceptos fundamentales de GitHub, incluyendo repositorios, ramas, confirmaciones y solicitudes de cambio. A trav√©s de la creaci√≥n de tu propio repositorio personalizado y pagina web, aprender√°s a gestionar el flujo de trabajo de las solicitudes de cambio, un m√©todo ampliamente utilizado para colaborar en la creaci√≥n y revisi√≥n de c√≥digo.\nObjetivos:\nEn esta gu√≠a r√°pida aprender√°s a:\n\nCrear y gestionar un repositorio.\nIniciar y administrar una nueva rama.\nRealizar cambios en un archivo y enviarlos a GitHub como confirmaci√≥n.\nCrear tu p√°gina de inicio en Github.\nCrear tu p√°gina web.\n\nCitar y reutilizar el material del curso\nLos datos del curso se pueden reutilizar y adaptar libremente con la debida atribuci√≥n. Todos los datos de los cursos de estos repositorios est√°n sujetos a la licencia Attribution-NonCommercial-ShareAlike 4.0 International (CC BY-NC-SA 4.0).\n\n\n\nDebes tener una cuenta de usuario de GitHub. Para m√°s informaci√≥n, consulta ‚ÄúCreaci√≥n de una cuenta en GitHub‚Äù.\nNo necesitas saber c√≥mo codificar, utilizar la l√≠nea de comandos o instalar Git (el software de control de versiones en el que est√° compilado GitHub).\nContar con una terminal con Git, en Windows puedes usar Git Bash.\n\n\n\n\n\n\n\n\n\n\nTema\nTiempo\n\n\n\n\nüî∑ Secci√≥n 1 - (8:30 - 10:00 h) (16 octubre)\n\n\n\n\nCreaci√≥n de una cuenta en GitHub\n\n5 min\n\n\n\nIntroducci√≥n a Git / GitHub\n\n15 min\n\n\n\nActividad 1: Sincronizaci√≥n y llaves\n\n15 min\n\n\n‚òï Coffee break (10 min) - (9:05-9:20) ‚òï\n10 min\n\n\nüî∑¬† Secci√≥n 2 - (9:20-10:00 h)\n\n\n\n\nComandos usados en Github y RStudio\n\n25 min\n\n\n\nActividad 2: Pagina de inicio en GitHub\n\n15 min\n\n\nüî∑¬† Secci√≥n 3 - (9:30 - 11:30 h) (18 octubre)\n\n\n\n\nBuenas practicas en R\n\n30 min\n\n\n\nActividad 3: Pagina web en GitHub\n\n1:30 min"
  },
  {
    "objectID": "Bash.html#preparaci√≥n-del-directorio-de-trabajo",
    "href": "Bash.html#preparaci√≥n-del-directorio-de-trabajo",
    "title": "1¬† Recordatorio de pasos en Bash",
    "section": "1.1 Preparaci√≥n del directorio de trabajo",
    "text": "1.1 Preparaci√≥n del directorio de trabajo\n\nRuta / Camino absoluto\ncd /home/usuario/data/\n\n\n\nRuta / Camino relativo\ncd ../ # Ir a la carpeta anterior"
  },
  {
    "objectID": "Bash.html#comandos-b√°sicos",
    "href": "Bash.html#comandos-b√°sicos",
    "title": "1¬† Recordatorio de pasos en Bash",
    "section": "1.2 Comandos b√°sicos",
    "text": "1.2 Comandos b√°sicos\n\n\n\n\n\n\n\n\nComandos\nInformaci√≥n\nArgumentos\n\n\n\n\nssh\nConexi√≥n a servidores\nssh usuario@servidor.mx\n\n\nls\nObservar el contenido de los archivos en una carpeta\nls directorio/\n\n\ncd\nMoverse de directorios\ncd /home/usuario/data/\n\n\nmkdir\nCrear un nuevo directorio\nmkdir data\n\n\nrmdir\nEliminar el directorio\nrmkdir -rf data\n\n\nnano¬†/¬†vim\nEditores de texto plano\nnano Archivo.txt / vim Archivo.txt\n\n\ncp\nCopiar archivos\ncp Archivo1.txt /home/usuario/data/\n\n\nmv\nMover un archivo o carpeta\n\n\n\necho\nPara llamar y/o declarar variables\necho ‚ÄúHello world‚Äù\n\n\nchmod\nCambiar permisos del usuario\nchmod 777 data/\n\n\nrsync\nDescargar o subir archivos\n\n\n\nscp\nDescargar o subir archivos"
  },
  {
    "objectID": "intro.html#objetivo-de-este-mini-curso",
    "href": "intro.html#objetivo-de-este-mini-curso",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.1 Objetivo de este mini curso: üìå",
    "text": "2.1 Objetivo de este mini curso: üìå\n\n2.1.1 Hacia una biolog√≠a computacional m√°s reproducible, transparente y colaborativa üíú\n\n\n\n\n\n\nTip\n\n\n\n‚ÄúLos hechos individuales no reproducibles no tienen ninguna importancia para la ciencia‚Äù\nKarl Popper"
  },
  {
    "objectID": "intro.html#por-qu√©-hacer-control-de-versiones-de-nuestros-proyectos",
    "href": "intro.html#por-qu√©-hacer-control-de-versiones-de-nuestros-proyectos",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.2 ¬øPor qu√© hacer control de versiones de nuestros proyectos?",
    "text": "2.2 ¬øPor qu√© hacer control de versiones de nuestros proyectos?\n\n‚úÖ Los proyectos suelen cambiar y crecer.\nüíæ Es d√≠ficil saber cu√°les fueron todos los cambios a lo largo del tiempo (en especial tiempos largos, hazlo por tu yo del futuro!).\nü§î Las colaboraciones se pueden complicar sin un buen control de versiones.\nüîê Seguridad.\n\n\n\n\n‚ÄúnotFinal.doc‚Äù by Jorge Cham, https://www.phdcomics.com"
  },
  {
    "objectID": "intro.html#git",
    "href": "intro.html#git",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.3 Git",
    "text": "2.3 Git\nGit es un sistema de control de versiones distribuido, gratuito y de c√≥digo abierto, dise√±ado para manejar todo tipo de proyectos, desde los m√°s peque√±os hasta los m√°s grandes, con rapidez y eficiencia.\nGit es f√°cil de aprender y ocupa poco espacio con un rendimiento rapid√≠simo. Supera a las herramientas SCM como Subversion, CVS, Perforce y ClearCase con caracter√≠sticas como la ramificaci√≥n local barata, las c√≥modas √°reas de preparaci√≥n y los m√∫ltiples flujos de trabajo.\nEn resumen:\n\nGit es un sistema de control de versiones\nGit funciona con GitHub, Bitbucket o GitLab"
  },
  {
    "objectID": "intro.html#git-vs-controles-de-versi√≥n-a-mano",
    "href": "intro.html#git-vs-controles-de-versi√≥n-a-mano",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.4 Git vs controles de versi√≥n a mano",
    "text": "2.4 Git vs controles de versi√≥n a mano\n\n\n\n\n\nCon Git cada contribuidor tiene una copia del repositorio central, con todos los archivos y la historia de los cambios por los que han pasado."
  },
  {
    "objectID": "intro.html#recomendaciones-para-sus-proyectos",
    "href": "intro.html#recomendaciones-para-sus-proyectos",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.5 Recomendaciones para sus proyectos",
    "text": "2.5 Recomendaciones para sus proyectos\n\nDedicar un directorio exclusivo por proyecto.\nEs mejor organizarlo en un RStudio Project.\nHacer un repositorio de Git.\nTrabajen como siempre, solo adem√°s de guardar, recuerden hacer commit\nDe vez en vez hagan push de sus cambios cuando los hayan verificado."
  },
  {
    "objectID": "intro.html#proyectos-colaborativos",
    "href": "intro.html#proyectos-colaborativos",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.6 10.5 Proyectos colaborativos",
    "text": "2.6 10.5 Proyectos colaborativos\n\nGitHub se parece m√°s a un GoogleDoc que a un Word Document.\nEs f√°cil que los colaboradores hagan cambios y tambi√©n es f√°cil saber qui√©n hizo que.\nEl owner del proyecto puede dar permisos a los diferentes colaboradores.\nTambi√©n existen organizaciones, esto puede ser √∫til para manejar los permisos de grupos grandes de colaboraci√≥n."
  },
  {
    "objectID": "intro.html#github",
    "href": "intro.html#github",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.7 GitHub",
    "text": "2.7 GitHub\nGitHub es una plataforma para guardar proyectos, hace uso de Git. Su principal utilidad es para generar c√≥digo fuente de programas.\nTambi√©n existen otras plataformas como¬†Bitbucked¬†y¬†GitLab, las cuales funcionan de manera similar a GitHub."
  },
  {
    "objectID": "intro.html#manual-de-sobreviviencia-con-git-y-github-en-rstudio-en-caso-de-ser-necesario",
    "href": "intro.html#manual-de-sobreviviencia-con-git-y-github-en-rstudio-en-caso-de-ser-necesario",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.8 Manual de sobreviviencia con Git Y GitHub en RStudio (en caso de ser necesario)",
    "text": "2.8 Manual de sobreviviencia con Git Y GitHub en RStudio (en caso de ser necesario)\n\nPor cualquier problema con la conexi√≥n entre RStudio y Git, siempre ten en cuenta la ubicaci√≥n de d√≥nde se instal√≥ Git.\n\nPuedes usar en la terminal which git (Mac y Linux)\nO bien usar en la terminal where git (Windows)\n\nRecuerda que la terminal (l√≠nea de comandos, consola, shell o bash) es un programa en tu computadora que funciona para correr otros programas. Desde RStudio puedes abrir la terminal, lo cual es muy conveniente si est√°s trabajando en un proyecto. Puedes abrir una terminal con:\n\nTools &gt; Terminal (abre la terminal dentro del IDE de RStudio)\nTools &gt; Shell (abre una terminal externa a RStudio) &gt; Apply &gt; OK"
  },
  {
    "objectID": "intro.html#clonar-un-repositorio-y-tener-conexi√≥npermisos-para-modificarlo",
    "href": "intro.html#clonar-un-repositorio-y-tener-conexi√≥npermisos-para-modificarlo",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.9 Clonar un repositorio y tener conexi√≥n/permisos para modificarlo",
    "text": "2.9 Clonar un repositorio y tener conexi√≥n/permisos para modificarlo\n\nGit puede comunicarse con un servidor remoto usando uno de dos protocolos, HTTPS o SSH, y cada protocolo usa credenciales diferentes.\nLa recomendaci√≥n actual de GitHub es usar HTTPS porque es la manera m√°s f√°cil de configurar y tiene operatividad en m√∫ltiples redes y plataformas.\n\nEs menos probable que HTTPS sea bloqueado por un firewall.\nUna conexi√≥n HTTPS permite que credential.helper almacene en cach√© su contrase√±a. (por tanto puedes configurar tu usuario y contrase√±a en tu equipo de uso).\nEs m√°s sencillo acceder a un repositorio desde cualquier lugar, ya que solo necesitas los detalles de tu cuenta (no se requieren claves SSH) para escribir en el repositorio.\n\nUsualmente cuando inicies un proyecto colaborativo con GitHub inicializa el repositorio con un README. Copia el HTTPS URL para clonar el repositorio en la terminal git clone https://github.com/TU-USUARIO/TU-REPOSITORIO.git."
  },
  {
    "objectID": "intro.html#conectar-a-github-con-ssh",
    "href": "intro.html#conectar-a-github-con-ssh",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.10 Conectar a GitHub con SSH",
    "text": "2.10 Conectar a GitHub con SSH\nPuedes conectarte a GitHub utilizando el Protocolo de Secure Shell (SSH), lo cual proporciona un canal seguro sobre una red insegura.\nPuedes asegurar tus claves SSH y configurar un agente de autenticaci√≥n para no tener que volver a ingresar tu contrase√±a cada vez que uses tus claves SSH.\nAqui esta la guia que puedes seguir https://docs.github.com/es/authentication/connecting-to-github-with-ssh/working-with-ssh-key-passphrases.\nTambien puedes crear tokens para usar la via HTTPs, puedes seguir los pasos en este tutorial.\n\n\n\n\n\n\nActividad (15 min):\n\n\n\nDeberan contar con:\n\nUna cuenta en GitHub\nR y RStudio actualizados\nGit instalado\nConectar Github con SSH o HTTPs."
  },
  {
    "objectID": "intro.html#referencias",
    "href": "intro.html#referencias",
    "title": "2¬† Introducci√≥n a Git / GitHub",
    "section": "2.11 Referencias",
    "text": "2.11 Referencias\n\nHaydee tutorial: Temas Selectos de An√°lisis Num√©rico y Computaci√≥n Cient√≠fica: Computo cient√≠fico para el an√°lisis de datos\nGithub tutorial: Trabajar con contrase√±as de clave SSH\nAlejandra Medina tutorial: Control de versiones con GitHub y RStudio\nHacia una biolog√≠a computacional m√°s reproducible, transparente y colaborativa"
  },
  {
    "objectID": "Parte2.html#github-primero-rstudio-despu√©s",
    "href": "Parte2.html#github-primero-rstudio-despu√©s",
    "title": "3¬† Comandos usados en Github y RStudio",
    "section": "3.1 GitHub primero, RStudio despu√©s‚Ä¶",
    "text": "3.1 GitHub primero, RStudio despu√©s‚Ä¶\n\nCrea un repositorio en GitHub: mi_repositorio &gt; Public &gt; YES initialize this repository with a README &gt; clicken el gran bot√≥n verde ‚ÄúCreate repository‚Äù\nEn RStudio crea un nuevo proyecto: File &gt; New Project &gt; Version Control &gt; Git. Ahi pega el URL del repositorio https://github.com/mi_usuario/mi_repositorio.git. Da click en Create Project.\n\nEsto nos generar√° los siguientes elementos:\n\nUn directorio nuevo\nUn repositorio Git enlazado a al repositorio de GitHub\nUn proyecto en RStudio\n\nCon este procedimiento ya no es necesario preocuparse por configurar controles remotos Git y rastrear ramas en la l√≠nea de comandos."
  },
  {
    "objectID": "Parte2.html#comentar-pull-y-push-en-rstudio",
    "href": "Parte2.html#comentar-pull-y-push-en-rstudio",
    "title": "3¬† Comandos usados en Github y RStudio",
    "section": "3.2 Comentar, pull y push en Rstudio",
    "text": "3.2 Comentar, pull y push en Rstudio\n\n\n\n\n\nCon la¬†flecha azul¬†podemos hacer pull (RECUERDA HACERLO ANTES DE HACER UN PUSH), y con la flecha verde un push. Para poder comentar y hacer push debemos marcar con una palomita mediante un¬†click¬†en las peque√±as cajas blancas de la columna¬†Staged, damos click en¬†commit¬†lo cual nos abre la siguiente ventana.\n\nVolvemos a dar¬†click¬†en¬†commit, y finalizamos con¬†push¬†(flecha verde)."
  },
  {
    "objectID": "Parte2.html#pagina-de-inicio-en-github",
    "href": "Parte2.html#pagina-de-inicio-en-github",
    "title": "3¬† Comandos usados en Github y RStudio",
    "section": "3.3 Pagina de inicio en GitHub",
    "text": "3.3 Pagina de inicio en GitHub\n\n\n\n\n\n\nActividad\n\n\n\n\nEn GitHub, crea un repositorio con el mismo nombre de usuario. Ejemplo: Mi usuario es EveliaCoss y mi repositorio se llama EveliaCoss, dandome la siguiente liga https://github.com/EveliaCoss/EveliaCoss\nAgrega un README al repositorio con tu informacion. Por Default ya trae una plantilla, modificala y adaptala a tu gusto.\nVisualiza como cambia tu inicio en el Github.\nSincroniza el GitHub en RStudio y realiza los cambios desde ahi."
  },
  {
    "objectID": "Parte2.html#referencias",
    "href": "Parte2.html#referencias",
    "title": "3¬† Comandos usados en Github y RStudio",
    "section": "3.4 Referencias",
    "text": "3.4 Referencias\n\nHaydee tutorial: Temas Selectos de An√°lisis Num√©rico y Computaci√≥n Cient√≠fica: Computo cient√≠fico para el an√°lisis de datos\nAlejandra Medina tutorial: Control de versiones con GitHub y RStudio"
  },
  {
    "objectID": "Parte3.html#materiales-informativos",
    "href": "Parte3.html#materiales-informativos",
    "title": "4¬† Buenas practicas en R",
    "section": "4.1 Materiales informativos",
    "text": "4.1 Materiales informativos\n\nCurso de Joselyn Cristina Ch√°vez Fuentes\nMe ayudo mucho este Video\nDocumentaci√≥n de funciones de Andr√©s Arredondo Cruz\n\nüí™ Estuve muy intensa viendo su codigo. Muchas gracias por tenerlos publico."
  },
  {
    "objectID": "Parte3.html#un-algoritmo-nos-permite-resolver-un-problema",
    "href": "Parte3.html#un-algoritmo-nos-permite-resolver-un-problema",
    "title": "4¬† Buenas practicas en R",
    "section": "4.2 Un algoritmo nos permite resolver un problema ‚≠ê",
    "text": "4.2 Un algoritmo nos permite resolver un problema ‚≠ê\nUn algoritmo es un m√©todo para resolver un problema mediante una serie de pasos definidos, precisos y finitos.\n\nDefinido: si se sigue dos veces, se obtiene el mismo resultado. Es reproducible.\nPreciso: implica el orden de realizaci√≥n de cada uno de los pasos.\nFinito: Tiene un numero determinado de pasos, implica que tiene un fin.\n\n\nUn algoritmo podemos definirlo como un programa o software."
  },
  {
    "objectID": "Parte3.html#para-escribir-un-buen-software-necesitas",
    "href": "Parte3.html#para-escribir-un-buen-software-necesitas",
    "title": "4¬† Buenas practicas en R",
    "section": "4.3 Para escribir un buen software necesitas:",
    "text": "4.3 Para escribir un buen software necesitas:\n\nEscribir c√≥digo mantenible (maintainable code), usar control de versiones (version control) y rastreadores de problemas (issue trackers), revisiones de c√≥digo (code reviews), pruebas unitarias (unit testing) y automatizaci√≥n de tareas (task automation).\nWilson, et al.¬†2014. PLOS Biology\n\nCon el fin de¬†previnir retracciones.\n\n\n\n\n\n\nPasos para escribir un buen software\n\n\n\n\nAn√°lisis del problema / Definir el problema\nDise√±o del algoritmo / Dise√±o del programa\nCodificaci√≥n / Escribir el c√≥digo\nCompilaci√≥n y ejecuci√≥n del programa\nVerificaci√≥n / Realizar pruebas\nDepuraci√≥n / Detectar los errores y corregirlos\n\n\nProgramacion defensiva\n\n\nDocumentaci√≥n"
  },
  {
    "objectID": "Parte3.html#paso-7-documentaci√≥n",
    "href": "Parte3.html#paso-7-documentaci√≥n",
    "title": "4¬† Buenas practicas en R",
    "section": "4.4 Paso 7: Documentaci√≥n",
    "text": "4.4 Paso 7: Documentaci√≥n\n\n\n\n\n\n\nNote\n\n\n\n\nAutor (author): Su nombre\nDia (date): Fecha de creaci√≥n\nPaquetes (packages)\nDirectorio de trabajo (Working directory): En que carpeta se encuentra tu datos y programa.\nInformaci√≥n descriptiva del programa (Description): ¬øPara qu√© sirve el programa? Ej: El siguiente programa realiza la suma de dos numeros enteros a partir de la entrada del usuario y posteriormente la imprime en pantalla.\nUsage ¬øC√≥mo se utiliza?\nArgumentos (Arguments)\n\nInformaci√≥n de entrada (Data Inputs): Ej: Solo numeros enteros (sin decimales).\nInformaci√≥n de salida (Outpus): Graficas, figuras, tablas, etc."
  },
  {
    "objectID": "Parte3.html#puntos-claves-para-buenas-practicas-en-bioinfo",
    "href": "Parte3.html#puntos-claves-para-buenas-practicas-en-bioinfo",
    "title": "4¬† Buenas practicas en R",
    "section": "4.5 Puntos claves para buenas practicas en bioinfo ‚≠ê",
    "text": "4.5 Puntos claves para buenas practicas en bioinfo ‚≠ê\n\nEscriba programas para personas, no para computadoras (Documenta qu√© hace y por qu√©). - Se coherente en la nomenclatura, indentaci√≥n y otros aspectos del estilo.\nDivide los programas en funciones cortas de un solo prop√≥sito. üíª üìö\nNo repitas tu c√≥digo. Crea pasos reproducibles o que se repitan por si solas. ‚û∞\nPlanifique los errores (Programacion defensiva) üö©\nOptimice el software s√≥lo despu√©s de que funcione correctamente. - Si funciona no lo modifiques, simplificalo.\nColaborar - Busque siempre bibliotecas de software bien mantenidas que hagan lo que necesita. üë•\n\n\n\n\n\n\n\nEjemplo de como realizo mis documentos üíú\n\n\n\nAqui les dejo el script que les doy a mis alumnos VisualizacionDatos.R del curso de An√°lisis de datos de RNA-Seq."
  },
  {
    "objectID": "Parte3.html#pagina-web-en-github",
    "href": "Parte3.html#pagina-web-en-github",
    "title": "4¬† Buenas practicas en R",
    "section": "4.6 Pagina web en GitHub",
    "text": "4.6 Pagina web en GitHub\n\n\n\n\n\n\nActividad\n\n\n\n\nEn GitHub, crea un repositorio con el mismo nombre de usuario y agregale ‚Äú.github.io‚Äù. Ejemplo: Mi usuario es EveliaCoss y mi repositorio se llama ‚ÄúEveliaCoss.github.io‚Äù, dandome la siguiente liga https://github.com/EveliaCoss/EveliaCoss.github.io\nDescarga el archivo index.Rmd y modificalo con tu informacion en tu repositorio.\nNo olvides sincronizar el GitHub en RStudio y realiza los cambios desde ahi.\nEn GitHub, convierte en pagina web tu repositorio en Settings &gt; Pages &gt; Branch cambia a Main y root &gt; Save"
  },
  {
    "objectID": "Parte3.html#top-github-users-by-public-contributions-in-mexico",
    "href": "Parte3.html#top-github-users-by-public-contributions-in-mexico",
    "title": "4¬† Buenas practicas en R",
    "section": "4.7 Top GitHub Users By Public Contributions in Mexico",
    "text": "4.7 Top GitHub Users By Public Contributions in Mexico"
  },
  {
    "objectID": "Parte3.html#referencias",
    "href": "Parte3.html#referencias",
    "title": "4¬† Buenas practicas en R",
    "section": "4.8 Referencias",
    "text": "4.8 Referencias\n\nHaydee tutorial: Temas Selectos de An√°lisis Num√©rico y Computaci√≥n Cient√≠fica: Computo cient√≠fico para el an√°lisis de datos\nAlejandra Medina tutorial: Control de versiones con GitHub y RStudio\nWilson, et al.¬†2014. Best Practices for Scientific Computing. PLOS Biology\nEvelia Coss - tutorial Buenas practicas en R\nEvelia Coss - Make your CV tutorial"
  }
]